# Load data
attach(EED)
# Check normality of Cooling Load
shapiro.test(data$Cooling_Load)
# Check normality of Surface Area, Wall Area, and Roof Area
shapiro.test(data$Surface_Area)
shapiro.test(data$Wall_Area)
shapiro.test(data$Roof_Area)
# Normality test for Cooling Load Distribution
# Anderson Darling Test
ad.test(Cooling_Load)
# Lilliefor  Test
lillie.test(Cooling_Load)
# Shapiro-wilk  Test
shapiro.test(Cooling_Load)
summary(Cooling_Load)
# Normality test for Surface Area Distribution
# Anderson Darling Test
ad.test(Surface_Area)
# Lilliefor  Test
lillie.test(Surface_Area)
# Shapiro-wilk  Test
shapiro.test(Surface_Area)
summary(Surface_Area)
# Normality test for Wall Area Distribution
# Anderson Darling Test
ad.test(Wall_Area)
# Lilliefor  Test
lillie.test(Wall_Area)
# Shapiro-wilk  Test
shapiro.test(Wall_Area)
summary(Wall_Area)
# Normality test for Roof Area Distribution
# Anderson Darling Test
ad.test(Roof_Area)
# Lilliefor  Test
lillie.test(Roof_Area)
# Shapiro-wilk  Test
shapiro.test(Roof_Area)
summary(Roof_Area)
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman")
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman")
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman")
attach(EED)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman")
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman")
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman")
attach(data)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman")
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman")
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman")
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman")
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
plot(data$Cooling_Load ~ data$Wall_Area,
main="Cooling Load vs Wall Area",
xlab="Wall Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Wall_Area), col="red", lwd=2)
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
plot(data$Cooling_Load_kW ~ data$Surface_Area,
main="Cooling Load (kW) vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (kW)",
pch=16, col="blue")
data$Cooling_Load_kW <- data$Cooling_Load * 0.00029307107
plot(data$Cooling_Load_kW ~ data$Surface_Area,
main="Cooling Load (kW) vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (kW)",
pch=16, col="blue")
abline(lm(data$Cooling_Load_kW ~ data$Surface_Area), col="red", lwd=2)
plot(data$Cooling_Load_kW ~ data$Surface_Area,
main="Cooling Load (kW) vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (kW)",
pch=16)
abline(lm(data$Cooling_Load_kW ~ data$Surface_Area), col="red", lwd=2)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman")
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman")
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman")
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman")
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman")
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman")
model <- lm(Cooling_Load ~ Surface_Area + Wall_Area + Roof_Area, data = data)
summary(model)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman",conf.level=0.95)
# Multiple linear regression
model <- lm(Cooling_Load ~ Surface_Area + Wall_Area + Roof_Area, data = data)
summary(model)
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
Surface_Area.Model<-lm(Cooling_Load~Surface_Area,na.exclude=TRUE)
Surface_Area.Model
summary(Surface_Area.Model)
# Predicted vs Actual plot
predicted_values <- predict(model)
plot(data$Cooling_Load, predicted_values, main = "Predicted vs Actual Cooling Load", xlab = "Actual Cooling Load", ylab = "Predicted Cooling Load")
# Plot residuals
plot(model$residuals)
Surface_Area.Model<-lm(Cooling_Load~Surface_Area,na.exclude=TRUE)
Surface_Area.Model
summary(Surface_Area.Model)
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
# Pearson correlation
cor.test(data$Cooling_Load, data$Surface_Area, method="pearson")
cor.test(data$Cooling_Load, data$Wall_Area, method="pearson")
cor.test(data$Cooling_Load, data$Roof_Area, method="pearson")
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman",conf.lev
# Pearson correlation
cor.test(data$Cooling_Load, data$Surface_Area, method="pearson")
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman",conf.level=0.95)
# Pearson correlation
cor.test(data$Cooling_Load, data$Surface_Area, method="pearson")
cor.test(data$Cooling_Load, data$Wall_Area, method="pearson")
cor.test(data$Cooling_Load, data$Roof_Area, method="pearson")
plot(data$Cooling_Load ~ data$Wall_Area,
main="Cooling Load vs Wall Area",
xlab="Wall Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Wall_Area), col="red", lwd=2)
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
# Normality test for Cooling Load Distribution
# Anderson Darling Test
ad.test(Cooling_Load)
# Lilliefor  Test
lillie.test(Cooling_Load)
# Shapiro-wilk  Test
shapiro.test(Cooling_Load)
summary(Cooling_Load)
# Normality test for Surface Area Distribution
# Anderson Darling Test
ad.test(Surface_Area)
# Lilliefor  Test
lillie.test(Surface_Area)
# Shapiro-wilk  Test
shapiro.test(Surface_Area)
summary(Surface_Area)
# Normality test for Wall Area Distribution
# Anderson Darling Test
ad.test(Wall_Area)
# Lilliefor  Test
lillie.test(Wall_Area)
# Shapiro-wilk  Test
shapiro.test(Wall_Area)
summary(Wall_Area)
# Normality test for Roof Area Distribution
# Anderson Darling Test
ad.test(Roof_Area)
# Lilliefor  Test
lillie.test(Roof_Area)
# Shapiro-wilk  Test
shapiro.test(Roof_Area)
summary(Roof_Area)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman",conf.level=0.95)
# Pearson correlation
cor.test(data$Cooling_Load, data$Surface_Area, method="pearson")
cor.test(data$Cooling_Load, data$Wall_Area, method="pearson")
cor.test(data$Cooling_Load, data$Roof_Area, method="pearson")
# Scatter plot for Cooling Load vs Roof Area
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Wall Area
plot(data$Cooling_Load ~ data$Wall_Area,
main="Cooling Load vs Wall Area",
xlab="Wall Area (sq. ft.)",
ylab="Cooling Load (BTU)",
pch=16, col="blue")
abline(lm(data$Cooling_Load ~ data$Wall_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Roof Area
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area (sq. ft.)",
ylab="Cooling Load (BTU)",
)
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Surface Area
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Wall Area
plot(data$Cooling_Load ~ data$Wall_Area,
main="Cooling Load vs Wall Area",
xlab="Wall Area (sq. ft.)",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Wall_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Wall Area
plot(data$Cooling_Load ~ data$Wall_Area,
main="Cooling Load vs Wall Area",
xlab="Wall Area (sq. ft.)",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Wall_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Surface Area
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
summary(EED)
# Normality test for Cooling Load Distribution
# Anderson Darling Test
ad.test(Cooling_Load)
# Lilliefor  Test
lillie.test(Cooling_Load)
# Shapiro-wilk  Test
shapiro.test(Cooling_Load)
summary(Cooling_Load)
# Normality test for Surface Area Distribution
# Anderson Darling Test
ad.test(Surface_Area)
# Lilliefor  Test
lillie.test(Surface_Area)
# Shapiro-wilk  Test
shapiro.test(Surface_Area)
summary(Surface_Area)
# Normality test for Wall Area Distribution
# Anderson Darling Test
ad.test(Wall_Area)
# Lilliefor  Test
lillie.test(Wall_Area)
# Shapiro-wilk  Test
shapiro.test(Wall_Area)
summary(Wall_Area)
# Normality test for Roof Area Distribution
# Anderson Darling Test
ad.test(Roof_Area)
# Lilliefor  Test
lillie.test(Roof_Area)
# Shapiro-wilk  Test
shapiro.test(Roof_Area)
summary(Roof_Area)
# Normality test for Cooling Load Distribution
# Anderson Darling Test
ad.test(Cooling_Load)
# Lilliefor  Test
lillie.test(Cooling_Load)
# Shapiro-wilk  Test
shapiro.test(Cooling_Load)
summary(Cooling_Load)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Wall_Area, method="spearman",conf.level=0.95)
cor.test(data$Cooling_Load, data$Roof_Area, method="spearman",conf.level=0.95)
# Scatter plot for Cooling Load vs Surface Area
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area (sq. ft.)",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Wall Area
plot(data$Cooling_Load ~ data$Wall_Area,
main="Cooling Load vs Wall Area",
xlab="Wall Area (sq. ft.)",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Wall_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Roof Area
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area (sq. ft.)",
ylab="Cooling Load (BTU)",)
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
# Normality test for Surface Area Distribution
# Anderson Darling Test
ad.test(Surface_Area)
# Lilliefor  Test
lillie.test(Surface_Area)
# Shapiro-wilk  Test
shapiro.test(Surface_Area)
summary(Surface_Area)
# Normality test for Wall Area Distribution
# Anderson Darling Test
ad.test(Wall_Area)
# Lilliefor  Test
lillie.test(Wall_Area)
# Shapiro-wilk  Test
shapiro.test(Wall_Area)
summary(Wall_Area)
# Normality test for Roof Area Distribution
# Anderson Darling Test
ad.test(Roof_Area)
# Lilliefor  Test
lillie.test(Roof_Area)
# Shapiro-wilk  Test
shapiro.test(Roof_Area)
summary(Roof_Area)
# Scatter plots
ggplot(data, aes(x=Surface_Area, y=Cooling_Load)) + geom_point() + geom_smooth(method="lm")
ggplot(data, aes(x=Wall_Area, y=Cooling_Load)) + geom_point() + geom_smooth(method="lm")
# Scatter plot for Cooling Load vs Surface Area
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area ",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Roof Area
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area ",
ylab="Cooling Load (BTU)",)
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Surface Area
plot(data$Cooling_Load ~ data$Surface_Area,
main="Cooling Load vs Surface Area",
xlab="Surface Area ",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Surface_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Roof Area
plot(data$Cooling_Load ~ data$Roof_Area,
main="Cooling Load vs Roof Area",
xlab="Roof Area ",
ylab="Cooling Load (BTU)",)
abline(lm(data$Cooling_Load ~ data$Roof_Area), col="red", lwd=2)
# Scatter plot for Cooling Load vs Wall Area
plot(data$Cooling_Load ~ data$Wall_Area,
main="Cooling Load vs Wall Area",
xlab="Wall Area ",
ylab="Cooling Load (BTU)")
abline(lm(data$Cooling_Load ~ data$Wall_Area), col="red", lwd=2)
cooling_surface.Model<-lm(Cooling_Load~Surface_Area,na.exclude=TRUE)
attach(EED)
#Regression Analysis
cooling_surface.Model<-lm(Cooling_Load~Surface_Area,na.exclude=TRUE)
cooling_surface.Model
summary(cooling_surface.Model)
73.4+(-0.072)*20
Surface_Area_Cool<- predict(cooling_surface.Model,EED)
attach(EED)
Surface_Area_Cool
73.4+(-0.072)*20.1
cooling_surface.Model<-lm(Cooling_Load~Surface_Area,na.exclude=TRUE)
cooling_surface.Model
summary(cooling_surface.Model)
73.4+(-0.072)*514
73.4+(-0.072)*515
Surface_Area_Cool<- predict(cooling_surface.Model,EED)
Surface_Area_Cool
Surface_Area_Cool<- predict(cooling_surface.Model,EED)
Surface_Area_Cool
cooling_wall.Model<-lm(Cooling_Load~Wall_Area,na.exclude=TRUE)
cooling_wall.Model
summary(cooling_wall.Model)
(-5.07)+0.093×294
attach(EED)
(-5.07)+0.093*294
Wall_Area_Cool<- predict(cooling_wall.Model,EED)
Wall_Area_Cool
cooling_roof.Model<-lm(Cooling_Load~Roof_Area,na.exclude=TRUE)
cooling_roof.Model
summary(cooling_roof.Model)
56.7+(-0.18)*110
Roof_Area_Cool<- predict(cooling_roof.Model,EED)
Roof_Area_Cool
# Create the scatter plot with trend lines
ggplot(data, aes(x = Surface_Area, y = Cooling_Load)) +
geom_point(shape = 1) +  # Scatter plot with open circles
geom_smooth(method = "lm", color = "blue", fill = "lightblue") +  # Linear regression line
geom_smooth(se = TRUE, color = "blue", linetype = "dashed") +  # Smoothed trend line (loess)
labs(title = "Income on Prestige Analysis", x = "Surface Area", y = "Cooling Load") +
theme_minimal()
ggplot(EED, aes(x = Surface_Area, y = Cooling_Load)) +
geom_point(shape = 1) +  # Scatter plot with open circles
geom_smooth(method = "lm", color = "blue", fill = "lightblue") +  # Linear regression line
geom_smooth(se = TRUE, color = "blue", linetype = "dashed") +  # Smoothed trend line (loess)
labs(title = "Income on Prestige Analysis", x = "Surface Area", y = "Cooling Load") +
theme_minimal()
library(ggplot)
library(ggplot)
install.packages("ggplot")
library(ggplot)
install.packages("ggplot")
library(ggplot)
library(ggplot2)
# Create the scatter plot with trend lines
ggplot(EED, aes(x = Surface_Area, y = Cooling_Load)) +
geom_point(shape = 1) +  # Scatter plot with open circles
geom_smooth(method = "lm", color = "blue", fill = "lightblue") +  # Linear regression line
geom_smooth(se = TRUE, color = "blue", linetype = "dashed") +  # Smoothed trend line (loess)
labs(title = "Income on Prestige Analysis", x = "Surface Area", y = "Cooling Load") +
theme_minimal()
model <- lm(Cooling_Load ~ Surface_Area + Wall_Area + Roof_Area, data = data)
summary(model)
model <- lm(Cooling_Load ~ Surface_Area + Wall_Area + Roof_Area, data = data)
vif(model)
library(glmnet)
X <- as.matrix(data[, c("Surface_Area", "Wall_Area", "Roof_Area")])
y <- data$Cooling_Load
ridge_model <- cv.glmnet(X, y, alpha = 0)
coef(ridge_model, s = "lambda.min")
library(glmnet)
X <- as.matrix(data[, c("Surface_Area", "Wall_Area", "Roof_Area")])
y <- data$Cooling_Load
ridge_model <- cv.glmnet(X, y, alpha = 0)
coef(ridge_model, s = "lambda.min")
# Compute correlation matrix
cor_matrix <- cor(data[, c("Surface_Area", "Wall_Area", "Roof_Area")], use = "complete.obs")
print(cor_matrix)
model <- lm(Cooling_Load ~ Surface_Area + Wall_Area + Roof_Area, data = data)
vif(model)
alias(model)
model <- lm(Cooling_Load ~ Surface_Area + Wall_Area + Roof_Area , data = data)
summary(model)
cor(data[, c("Surface_Area", "Wall_Area", "Roof_Area")])
model <- lm(Cooling_Load ~ Roof_Area  + Surface_Area + Wall_Area + Roof_Area , data = data)
summary(model)
model <- lm(Cooling_Load ~Wall_Area+ Roof_Area  + Surface_Area + Wall_Area +  , data = data)
model <- lm(Cooling_Load ~ Wall_Area + Roof_Area  + Surface_Area  , data = data)
summary(model)
model <- lm(Cooling_Load ~ Relative_Compactness + Surface_Area + Glazing_Area_Distribution, data = energy_data)
model <- lm(Cooling_Load ~ Relative_Compactness + Surface_Area + Glazing_Area_Distribution, data = EED)
summary(model)
# Spearman correlation test
cor.test(data$Cooling_Load, data$Surface_Area, method="spearman",conf.level=0.95)
library('splines')
library('RcmdrMisc')
library('car')
library('Matrix')
library('carData')
library('sandwich')
library('effects')
library('RcmdrMisc')
library('Rcmdr')
# Using R Commander
install.packages('Rcmdr')
library('Matrix')
# Using R Commander
install.packages('Rcmdr')
library('Rcmdr')
# Cooling Load vs Wall Area
cooling_wall.Model<-lm(Cooling_Load~Wall_Area,na.exclude=TRUE)
attach(EED)
cooling_surface.Model<-lm(Cooling_Load~Surface_Area,na.exclude=TRUE)
cooling_surface.Model
summary(cooling_surface.Model)
qqPlot(EED$Cooling_Load, main="Quantiles Comparison of Cooling Load", ylab="Cooling Load", col="blue")
library(ggplot2)
qqPlot(EED$Cooling_Load, main="Quantiles Comparison of Cooling Load", ylab="Cooling Load", col="blue")
qqPlot(EED$Cooling_Load, main="Quantiles Comparison of Cooling Load", ylab="Cooling Load", col="blue")
library(nortest)
attach(EED)
qqPlot(EED$Cooling_Load, main="Quantiles Comparison of Cooling Load", ylab="Cooling Load", col="blue")
library(car)
qqPlot(EED$Cooling_Load, main="Quantiles Comparison of Cooling Load", ylab="Cooling Load", col="blue")
library('Rcmdr')
model <- lm(Cooling_Load ~ Relative_Compactness + Surface_Area + Glazing_Area_Distribution, data = EED)
summary(model)
# Multiple linear regression
model <- lm(Cooling_Load ~ Relative_Compactness + Surface_Area + Glazing_Area_Distribution, data = EED)
summary(model)
cor(data[, c("Surface_Area", "Wall_Area", "Roof_Area")])
# Multiple linear regression
model <- lm(Cooling_Load ~ Surface_Area + Wall_Area + Roof_Area, data = EED)
summary(model)
cor(data[, c("Surface_Area", "Wall_Area", "Roof_Area")])
q()
